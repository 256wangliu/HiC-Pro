#!/bin/bash

## HiC-Pro           
## Copyleft 2015-2016 Institut Curie
## Author(s): Alex Barrera, Nicolas Servant
## Contact: nicolas.servant@curie.fr
## This software is distributed without any guarantee under the terms of the GNU General
## Public License, either Version 2, June 1991 or Version 3, June 2007.

function usage {
    echo -e "usage : hicpro2juicebox -i VALIDPAIRS -r RESFRAG -g GENOME -j JUICEBOXJAR [-t TEMP] [-o OUT] [-h]"
    echo -e "Use option -h|--help for more information"
}

function help {
    usage;
    echo 
    echo "Generate JuiceBox input file from HiC-Pro results"
    echo "See http://www.aidenlab.org/juicebox/ for details about Juicebox"
    echo "---------------"
    echo "OPTIONS"
    echo
    echo "   -i|--input VALIDPAIRS : allValidPairs file generated by HiC-Pro >= 2.7.5"
    echo "   -r|--resfrag RESFRAG : restriction fragment file used by HiC-Pro"
    echo "   -g|--genome GENOME : genome information required by Juicebox, must be one of hg18, hg19, hg38, dMel, mm9, mm10, anasPlat1, bTaurus3, canFam3, equCab2, galGal4, Pf3D7, sacCer3, sCerS288c, susScr3, or TAIR10"
    echo "   -j|--jar JUICEBOXJAR : path to juicebox_clt.jar file"
    echo "   [-t|--temp] TEMP : path to tmp folder. Default is current path"
    echo "   [-o|--out] OUT : output path. Default is current path"
    echo "   [-h|--help]: help"
    exit;
}


if [ $# -lt 1 ]
then
    usage
    exit
fi

# Transform long options to short ones
for arg in "$@"; do
  shift
  case "$arg" in
      "--input") set -- "$@" "-i" ;;
      "--resfrag") set -- "$@" "-r" ;;
      "--genome")   set -- "$@" "-g" ;;
      "--jar")   set -- "$@" "-j" ;;
      "--temp")   set -- "$@" "-t" ;;
      "--out")   set -- "$@" "-o" ;;
      "--help")   set -- "$@" "-h" ;;
       *)        set -- "$@" "$arg"
  esac
done

VALIDPAIRS=""
RESFRAG=""
GENOME=""
JUICEBOXJAR=""
TEMP="./tmp"
OUT="./"

while getopts ":i:r:g:j:t:o:h" OPT
do
    case $OPT in
	i) VALIDPAIRS=$OPTARG;;
	r) RESFRAG=$OPTARG;;
	g) GENOME=$OPTARG;;
	j) JUICEBOXJAR=$OPTARG;;
	t) TEMP=$OPTARG;;
	o) OUT=$OPTARG;;
	h) help ;;
	\?)
	    echo "Invalid option: -$OPTARG" >&2
	    usage
	    exit 1
	    ;;
	:)
	    echo "Option -$OPTARG requires an argument." >&2
	    usage
	    exit 1
	    ;;
    esac
done

if [[ -z $VALIDPAIRS || -z $RESFRAG || -z $GENOME || -z $JUICEBOXJAR ]]; then
    usage
    exit
fi

## Create output folder
mkdir -p ${TEMP}

## Check JAVA version
JAVA_VERSION=$(java -version 2>&1 |awk 'NR==1{ gsub(/"/,""); print $3 }')
if [[ "$JAVA_VERSION" < "1.8" ]]; then
    echo "Warning : Java version must be > 1.8.0 to use Juicebox - $JAVA_VERSION detected"
fi

if [[ ! -e $JUICEBOXJAR ]]; then
    echo "Juicebox .jar file not found. Exit"
    exit 1
fi

echo "Generating Juicebox input files ..."
##The restriction fragment sites file needs to be converted in order to be used in Juicebox command line tool (see attached script). They expect one line per chromosome with restriction sites separated by tabs and sorted by coordinate.
awk 'BEGIN{OFS="\t"; prev_chr=""}$1=="chrM"{$1="chrMT"}$1!=prev{print ""; prev=$1; sub(/chr/, "", $1); printf "%s\t", $1; printf "%s\t", $3}$1==prev{printf "%s\t",$3}END{print ""}' $RESFRAG | sed "s/\t\n/\n/" | sed "/^$/d" > ${TEMP}/$$_resfrag.juicebox

##The “pre” command needs the contact map to be sorted by chromosome and grouped so that all reads for one chromosome (let’s say, chr1) appear in the same column. Also, chromosomes should not have the ‘chr” substring and the strand is coded as 0 for positive and anything else for negative (in practice, 1). Hopefully all this is better understood with the second script I attached.
awk '$2=="chrM"{$2="chrMT"}$5=="chrM"{$5="chrMT"}{$4=$4!="+"; $7=$7!="+"; sub(/chr/, "", $2); sub(/chr/, "", $5); split($9, frag1, "_"); split($10, frag2, "_"); } $2<=$5{print $1, $4, $2, $3, frag1[3], $7, $5, $6, frag2[3], $11, $12 }$5<$2{ print $1, $7, $5, $6, frag2[3], $4, $2, $3, frag1[3], $12, $11 }' $VALIDPAIRS | sort -k3,3d  -k7,7d -S 90 > ${TEMP}/$$_allValidPairs.pre_juicebox_sorted

echo -e "Running Juicebox ..."
OUTPUTFILE=${OUT}/$(basename $VALIDPAIRS).hic

##This is the command to generate the hic file that can be visualized with Juicebox
java -jar ${JUICEBOXJAR} pre -f ${TEMP}/$$_resfrag.juicebox ${TEMP}/$$_allValidPairs.pre_juicebox_sorted ${OUTPUTFILE} ${GENOME}

## Clean
/bin/rm -f ${TEMP}/$$_resfrag.juicebox ${TEMP}/$$_allValidPairs.pre_juicebox_sorted

echo "done !""
